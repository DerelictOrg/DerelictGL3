/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/
module derelict.opengl3.functions;

private {
    import derelict.opengl3.types;
    import derelict.util.system;
}

extern( System ) @nogc nothrow {
    // OpenGL 1.0
    alias da_glCullFace = void function( GLenum );
    alias da_glFrontFace = void function( GLenum );
    alias da_glHint = void function( GLenum,GLenum );
    alias da_glLineWidth = void function( GLfloat );
    alias da_glPointSize = void function( GLfloat );
    alias da_glPolygonMode = void function( GLenum,GLenum );
    alias da_glScissor = void function( GLint,GLint,GLsizei,GLsizei );
    alias da_glTexParameterf = void function( GLenum,GLenum,GLfloat );
    alias da_glTexParameterfv = void function( GLenum,GLenum,const( GLfloat )* );
    alias da_glTexParameteri = void function( GLenum,GLenum,GLint );
    alias da_glTexParameteriv = void function( GLenum,GLenum,const( GLint )* );
    alias da_glTexImage1D = void function( GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,const( GLvoid )* );
    alias da_glTexImage2D = void function( GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,const( GLvoid )* );
    alias da_glDrawBuffer = void function( GLenum );
    alias da_glClear = void function( GLbitfield );
    alias da_glClearColor = void function( GLclampf,GLclampf,GLclampf,GLclampf );
    alias da_glClearStencil = void function( GLint );
    alias da_glClearDepth = void function( GLclampd );
    alias da_glStencilMask = void function( GLuint );
    alias da_glColorMask = void function( GLboolean,GLboolean,GLboolean,GLboolean );
    alias da_glDepthMask = void function( GLboolean );
    alias da_glDisable = void function( GLenum );
    alias da_glEnable = void function( GLenum );
    alias da_glFinish = void function();
    alias da_glFlush = void function();
    alias da_glBlendFunc = void function( GLenum,GLenum );
    alias da_glLogicOp = void function( GLenum );
    alias da_glStencilFunc = void function( GLenum,GLint,GLuint );
    alias da_glStencilOp = void function( GLenum,GLenum,GLenum );
    alias da_glDepthFunc = void function( GLenum );
    alias da_glPixelStoref = void function( GLenum,GLfloat );
    alias da_glPixelStorei = void function( GLenum,GLint );
    alias da_glReadBuffer = void function( GLenum );
    alias da_glReadPixels = void function( GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid* );
    alias da_glGetBooleanv = void function( GLenum,GLboolean* );
    alias da_glGetDoublev = void function( GLenum,GLdouble* );
    alias da_glGetError = GLenum function();
    alias da_glGetFloatv = void function( GLenum,GLfloat* );
    alias da_glGetIntegerv = void function( GLenum,GLint* );
    alias da_glGetString = const( char* ) function( GLenum );
    alias da_glGetTexImage = void function( GLenum,GLint,GLenum,GLenum,GLvoid* );
    alias da_glGetTexParameterfv = void function( GLenum,GLenum,GLfloat* );
    alias da_glGetTexParameteriv = void function( GLenum,GLenum,GLint* );
    alias da_glGetTexLevelParameterfv = void function( GLenum,GLint,GLenum,GLfloat* );
    alias da_glGetTexLevelParameteriv = void function( GLenum,GLint,GLenum,GLint* );
    alias da_glIsEnabled = GLboolean function( GLenum );
    alias da_glDepthRange = void function( GLclampd,GLclampd );
    alias da_glViewport = void function( GLint,GLint,GLsizei,GLsizei );

    // OpenGL 1.1
    alias da_glDrawArrays = void function( GLenum,GLint,GLsizei );
    alias da_glDrawElements = void function( GLenum,GLsizei,GLenum,const( GLvoid )* );
    alias da_glGetPointerv = void function( GLenum,GLvoid* );
    alias da_glPolygonOffset = void function( GLfloat,GLfloat );
    alias da_glCopyTexImage1D = void function( GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint );
    alias da_glCopyTexImage2D = void function( GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint );
    alias da_glCopyTexSubImage1D = void function( GLenum,GLint,GLint,GLint,GLint,GLsizei );
    alias da_glCopyTexSubImage2D = void function( GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei );
    alias da_glTexSubImage1D = void function( GLenum,GLint,GLint,GLsizei,GLenum,GLenum,const( GLvoid )* );
    alias da_glTexSubImage2D = void function( GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,const( GLvoid )* );
    alias da_glBindTexture = void function( GLenum,GLuint );
    alias da_glDeleteTextures = void function( GLsizei,const( GLuint )* );
    alias da_glGenTextures = void function( GLsizei,GLuint* );
    alias da_glIsTexture = GLboolean function( GLuint );

    // OpenGL 1.2
    alias da_glBlendColor = void function( GLclampf,GLclampf,GLclampf,GLclampf );
    alias da_glBlendEquation = void function( GLenum );
    alias da_glDrawRangeElements = void function( GLenum,GLuint,GLuint,GLsizei,GLenum,const( GLvoid )* );
    alias da_glTexImage3D = void function( GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const( GLvoid )* );
    alias da_glTexSubImage3D = void function( GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const( GLvoid )* );
    alias da_glCopyTexSubImage3D = void function( GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei );

    // OpenGL 1.3
    alias da_glActiveTexture = void function( GLenum );
    alias da_glSampleCoverage = void function( GLclampf,GLboolean );
    alias da_glCompressedTexImage3D = void function( GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,const( GLvoid )* );
    alias da_glCompressedTexImage2D = void function( GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,const( GLvoid )* );
    alias da_glCompressedTexImage1D = void function( GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,const( GLvoid )* );
    alias da_glCompressedTexSubImage3D = void function( GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const( GLvoid )* );
    alias da_glCompressedTexSubImage2D = void function( GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const( GLvoid )* );
    alias da_glCompressedTexSubImage1D = void function( GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,const( GLvoid )* );
    alias da_glGetCompressedTexImage = void function( GLenum,GLint,GLvoid* );

    // OpenGL 1.4
    alias da_glBlendFuncSeparate = void function( GLenum,GLenum,GLenum,GLenum );
    alias da_glMultiDrawArrays = void function( GLenum,const( GLint )*,const( GLsizei )*,GLsizei );
    alias da_glMultiDrawElements = void function( GLenum,const( GLsizei )*,GLenum,const( GLvoid )*,GLsizei );
    alias da_glPointParameterf = void function( GLenum,GLfloat );
    alias da_glPointParameterfv = void function( GLenum,const( GLfloat )* );
    alias da_glPointParameteri = void function( GLenum,GLint );
    alias da_glPointParameteriv = void function( GLenum,const( GLint )* );

    // OpenGL 1.5
    alias da_glGenQueries = void function( GLsizei,GLuint* );
    alias da_glDeleteQueries = void function( GLsizei,const( GLuint )* );
    alias da_glIsQuery = GLboolean function( GLuint );
    alias da_glBeginQuery = void function( GLenum,GLuint );
    alias da_glEndQuery = void function( GLenum );
    alias da_glGetQueryiv = void function( GLenum,GLenum,GLint* );
    alias da_glGetQueryObjectiv = void function( GLuint,GLenum,GLint* );
    alias da_glGetQueryObjectuiv = void function( GLuint,GLenum,GLuint* );
    alias da_glBindBuffer = void function( GLenum,GLuint );
    alias da_glDeleteBuffers = void function( GLsizei,const( GLuint )* );
    alias da_glGenBuffers = void function( GLsizei,GLuint* );
    alias da_glIsBuffer = GLboolean function( GLuint );
    alias da_glBufferData = void function( GLenum,GLsizeiptr,const( GLvoid )*,GLenum );
    alias da_glBufferSubData = void function( GLenum,GLintptr,GLsizeiptr,const( GLvoid )* );
    alias da_glGetBufferSubData = void function( GLenum,GLintptr,GLsizeiptr,GLvoid* );
    alias da_glMapBuffer = GLvoid* function( GLenum,GLenum );
    alias da_glUnmapBuffer = GLboolean function( GLenum );
    alias da_glGetBufferParameteriv = void function( GLenum,GLenum,GLint* );
    alias da_glGetBufferPointerv = void function( GLenum,GLenum,GLvoid* );

    // OpenGL 2.0
    alias da_glBlendEquationSeparate = void function( GLenum,GLenum );
    alias da_glDrawBuffers = void function( GLsizei,const( GLenum )* );
    alias da_glStencilOpSeparate = void function( GLenum,GLenum,GLenum,GLenum );
    alias da_glStencilFuncSeparate = void function( GLenum,GLenum,GLint,GLuint );
    alias da_glStencilMaskSeparate = void function( GLenum,GLuint );
    alias da_glAttachShader = void function( GLuint,GLuint );
    alias da_glBindAttribLocation = void function( GLuint,GLuint,const( GLchar )* );
    alias da_glCompileShader = void function( GLuint );
    alias da_glCreateProgram = GLuint function();
    alias da_glCreateShader = GLuint function( GLenum );
    alias da_glDeleteProgram = void function( GLuint );
    alias da_glDeleteShader = void function( GLuint );
    alias da_glDetachShader = void function( GLuint,GLuint );
    alias da_glDisableVertexAttribArray = void function( GLuint );
    alias da_glEnableVertexAttribArray = void function( GLuint );
    alias da_glGetActiveAttrib = void function( GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar* );
    alias da_glGetActiveUniform = void function( GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar* );
    alias da_glGetAttachedShaders = void function( GLuint,GLsizei,GLsizei*,GLuint* );
    alias da_glGetAttribLocation = GLint function( GLuint,const( GLchar )* );
    alias da_glGetProgramiv = void function( GLuint,GLenum,GLint* );
    alias da_glGetProgramInfoLog = void function( GLuint,GLsizei,GLsizei*,GLchar* );
    alias da_glGetShaderiv = void function( GLuint,GLenum,GLint* );
    alias da_glGetShaderInfoLog = void function( GLuint,GLsizei,GLsizei*,GLchar* );
    alias da_glGetShaderSource = void function( GLuint,GLsizei,GLsizei*,GLchar* );
    alias da_glGetUniformLocation = GLint function( GLuint,const( GLchar )* );
    alias da_glGetUniformfv = void function( GLuint,GLint,GLfloat* );
    alias da_glGetUniformiv = void function( GLuint,GLint,GLint* );
    alias da_glGetVertexAttribdv = void function( GLuint,GLenum,GLdouble* );
    alias da_glGetVertexAttribfv = void function( GLuint,GLenum,GLfloat* );
    alias da_glGetVertexAttribiv = void function( GLuint,GLenum,GLint* );
    alias da_glGetVertexAttribPointerv = void function( GLuint,GLenum,GLvoid* );
    alias da_glIsProgram = GLboolean function( GLuint );
    alias da_glIsShader = GLboolean function( GLuint );
    alias da_glLinkProgram = void function( GLuint );
    alias da_glShaderSource = void function( GLuint,GLsizei,const( GLchar* )*,const( GLint )* );
    alias da_glUseProgram = void function( GLuint );
    alias da_glUniform1f = void function( GLint,GLfloat );
    alias da_glUniform2f = void function( GLint,GLfloat,GLfloat );
    alias da_glUniform3f = void function( GLint,GLfloat,GLfloat,GLfloat );
    alias da_glUniform4f = void function( GLint,GLfloat,GLfloat,GLfloat,GLfloat );
    alias da_glUniform1i = void function( GLint,GLint );
    alias da_glUniform2i = void function( GLint,GLint,GLint );
    alias da_glUniform3i = void function( GLint,GLint,GLint,GLint );
    alias da_glUniform4i = void function( GLint,GLint,GLint,GLint,GLint );
    alias da_glUniform1fv = void function( GLint,GLsizei,const( GLfloat )* );
    alias da_glUniform2fv = void function( GLint,GLsizei,const( GLfloat )* );
    alias da_glUniform3fv = void function( GLint,GLsizei,const( GLfloat )* );
    alias da_glUniform4fv = void function( GLint,GLsizei,const( GLfloat )* );
    alias da_glUniform1iv = void function( GLint,GLsizei,const( GLint )* );
    alias da_glUniform2iv = void function( GLint,GLsizei,const( GLint )* );
    alias da_glUniform3iv = void function( GLint,GLsizei,const( GLint )* );
    alias da_glUniform4iv = void function( GLint,GLsizei,const( GLint )* );
    alias da_glUniformMatrix2fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix3fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix4fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glValidateProgram = void function( GLuint );
    alias da_glVertexAttrib1d = void function( GLuint,GLdouble );
    alias da_glVertexAttrib1dv = void function( GLuint,const( GLdouble )* );
    alias da_glVertexAttrib1f = void function( GLuint,GLfloat );
    alias da_glVertexAttrib1fv = void function( GLuint,const( GLfloat )* );
    alias da_glVertexAttrib1s = void function( GLuint,GLshort );
    alias da_glVertexAttrib1sv = void function( GLuint,const( GLshort )* );
    alias da_glVertexAttrib2d = void function( GLuint,GLdouble,GLdouble );
    alias da_glVertexAttrib2dv = void function( GLuint,const( GLdouble )* );
    alias da_glVertexAttrib2f = void function( GLuint,GLfloat,GLfloat );
    alias da_glVertexAttrib2fv = void function( GLuint,const( GLfloat )* );
    alias da_glVertexAttrib2s = void function( GLuint,GLshort,GLshort );
    alias da_glVertexAttrib2sv = void function( GLuint,const( GLshort )* );
    alias da_glVertexAttrib3d = void function( GLuint,GLdouble,GLdouble,GLdouble );
    alias da_glVertexAttrib3dv = void function( GLuint,const( GLdouble )* );
    alias da_glVertexAttrib3f = void function( GLuint,GLfloat,GLfloat,GLfloat );
    alias da_glVertexAttrib3fv = void function( GLuint,const( GLfloat )* );
    alias da_glVertexAttrib3s = void function( GLuint,GLshort,GLshort,GLshort );
    alias da_glVertexAttrib3sv = void function( GLuint,const( GLshort )* );
    alias da_glVertexAttrib4Nbv = void function( GLuint,const( GLbyte )* );
    alias da_glVertexAttrib4Niv = void function( GLuint,const( GLint )* );
    alias da_glVertexAttrib4Nsv = void function( GLuint,const( GLshort )* );
    alias da_glVertexAttrib4Nub = void function( GLuint,GLubyte,GLubyte,GLubyte,GLubyte );
    alias da_glVertexAttrib4Nubv = void function( GLuint,const( GLubyte )* );
    alias da_glVertexAttrib4Nuiv = void function( GLuint,const( GLuint )* );
    alias da_glVertexAttrib4Nusv = void function( GLuint,const( GLushort )* );
    alias da_glVertexAttrib4bv = void function( GLuint,const( GLbyte )* );
    alias da_glVertexAttrib4d = void function( GLuint,GLdouble,GLdouble,GLdouble,GLdouble );
    alias da_glVertexAttrib4dv = void function( GLuint,const( GLdouble )* );
    alias da_glVertexAttrib4f = void function( GLuint,GLfloat,GLfloat,GLfloat,GLfloat );
    alias da_glVertexAttrib4fv = void function( GLuint,const( GLfloat )* );
    alias da_glVertexAttrib4iv = void function( GLuint,const( GLint )* );
    alias da_glVertexAttrib4s = void function( GLuint,GLshort,GLshort,GLshort,GLshort );
    alias da_glVertexAttrib4sv = void function( GLuint,const( GLshort )* );
    alias da_glVertexAttrib4ubv = void function( GLuint,const( GLubyte )* );
    alias da_glVertexAttrib4uiv = void function( GLuint,const( GLuint )* );
    alias da_glVertexAttrib4usv = void function( GLuint,const( GLushort )* );
    alias da_glVertexAttribPointer = void function( GLuint,GLint,GLenum,GLboolean,GLsizei,const( GLvoid )* );

    // OpenGL 2.1
    alias da_glUniformMatrix2x3fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix3x2fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix2x4fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix4x2fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix3x4fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );
    alias da_glUniformMatrix4x3fv = void function( GLint,GLsizei,GLboolean,const( GLfloat )* );

    // OpenGL 3.0
    alias da_glColorMaski = void function( GLuint,GLboolean,GLboolean,GLboolean,GLboolean );
    alias da_glGetBooleani_v = void function( GLenum,GLuint,GLboolean* );
    alias da_glGetIntegeri_v = void function( GLenum,GLuint,GLint* );
    alias da_glEnablei = void function( GLenum,GLuint );
    alias da_glDisablei = void function( GLenum,GLuint );
    alias da_glIsEnabledi = GLboolean function( GLenum,GLuint );
    alias da_glBeginTransformFeedback = void function( GLenum );
    alias da_glEndTransformFeedback = void function();
    alias da_glBindBufferRange = void function( GLenum,GLuint,GLuint,GLintptr,GLsizeiptr );
    alias da_glBindBufferBase = void function( GLenum,GLuint,GLuint );
    alias da_glTransformFeedbackVaryings = void function( GLuint,GLsizei,const( GLchar* )*,GLenum );
    alias da_glGetTransformFeedbackVarying = void function( GLuint,GLuint,GLsizei,GLsizei*,GLsizei*,GLenum*,GLchar* );
    alias da_glClampColor = void function( GLenum,GLenum );
    alias da_glBeginConditionalRender = void function( GLuint,GLenum );
    alias da_glEndConditionalRender = void function();
    alias da_glVertexAttribIPointer = void function( GLuint,GLint,GLenum,GLsizei,const( GLvoid )* );
    alias da_glGetVertexAttribIiv = void function( GLuint,GLenum,GLint* );
    alias da_glGetVertexAttribIuiv = void function( GLuint,GLenum,GLuint* );
    alias da_glVertexAttribI1i = void function( GLuint,GLint );
    alias da_glVertexAttribI2i = void function( GLuint,GLint,GLint );
    alias da_glVertexAttribI3i = void function( GLuint,GLint,GLint,GLint );
    alias da_glVertexAttribI4i = void function( GLuint,GLint,GLint,GLint,GLint );
    alias da_glVertexAttribI1ui = void function( GLuint,GLuint );
    alias da_glVertexAttribI2ui = void function( GLuint,GLuint,GLuint );
    alias da_glVertexAttribI3ui = void function( GLuint,GLuint,GLuint,GLuint );
    alias da_glVertexAttribI4ui = void function( GLuint,GLuint,GLuint,GLuint,GLuint );
    alias da_glVertexAttribI1iv = void function( GLuint,const( GLint )* );
    alias da_glVertexAttribI2iv = void function( GLuint,const( GLint )* );
    alias da_glVertexAttribI3iv = void function( GLuint,const( GLint )* );
    alias da_glVertexAttribI4iv = void function( GLuint,const( GLint )* );
    alias da_glVertexAttribI1uiv = void function( GLuint,const( GLuint )* );
    alias da_glVertexAttribI2uiv = void function( GLuint,const( GLuint )* );
    alias da_glVertexAttribI3uiv = void function( GLuint,const( GLuint )* );
    alias da_glVertexAttribI4uiv = void function( GLuint,const( GLuint )* );
    alias da_glVertexAttribI4bv = void function( GLuint,const( GLbyte )* );
    alias da_glVertexAttribI4sv = void function( GLuint,const( GLshort )* );
    alias da_glVertexAttribI4ubv = void function( GLuint,const( GLubyte )* );
    alias da_glVertexAttribI4usv = void function( GLuint,const( GLushort )* );
    alias da_glGetUniformuiv = void function( GLuint,GLint,GLuint* );
    alias da_glBindFragDataLocation = void function( GLuint,GLuint,const( GLchar )* );
    alias da_glGetFragDataLocation = GLint function( GLuint,const( GLchar )* );
    alias da_glUniform1ui = void function( GLint,GLuint );
    alias da_glUniform2ui = void function( GLint,GLuint,GLuint );
    alias da_glUniform3ui = void function( GLint,GLuint,GLuint,GLuint );
    alias da_glUniform4ui = void function( GLint,GLuint,GLuint,GLuint,GLuint );
    alias da_glUniform1uiv = void function( GLint,GLsizei,const( GLuint )* );
    alias da_glUniform2uiv = void function( GLint,GLsizei,const( GLuint )* );
    alias da_glUniform3uiv = void function( GLint,GLsizei,const( GLuint )* );
    alias da_glUniform4uiv = void function( GLint,GLsizei,const( GLuint )* );
    alias da_glTexParameterIiv = void function( GLenum,GLenum,const( GLint )* );
    alias da_glTexParameterIuiv = void function( GLenum,GLenum,const( GLuint )* );
    alias da_glGetTexParameterIiv = void function( GLenum,GLenum,GLint* );
    alias da_glGetTexParameterIuiv = void function( GLenum,GLenum,GLuint* );
    alias da_glClearBufferiv = void function( GLenum,GLint,const( GLint )* );
    alias da_glClearBufferuiv = void function( GLenum,GLint,const( GLuint )* );
    alias da_glClearBufferfv = void function( GLenum,GLint,const( GLfloat )* );
    alias da_glClearBufferfi = void function( GLenum,GLint,GLfloat,GLint );
    alias da_glGetStringi = const( char )* function( GLenum,GLuint );

    // OpenGL 3.1
    alias da_glDrawArraysInstanced = void function( GLenum,GLint,GLsizei,GLsizei );
    alias da_glDrawElementsInstanced = void function( GLenum,GLsizei,GLenum,const( GLvoid )*,GLsizei );
    alias da_glTexBuffer = void function( GLenum,GLenum,GLuint );
    alias da_glPrimitiveRestartIndex = void function( GLuint );

    // OpenGL 3.2
    alias da_glGetInteger64i_v = void function( GLenum,GLuint,GLint64* );
    alias da_glGetBufferParameteri64v = void function( GLenum,GLenum,GLint64* );
    alias da_glFramebufferTexture = void function( GLenum,GLenum,GLuint,GLint );

    // OpenGL 3.3
    alias da_glVertexAttribDivisor = void function( GLuint,GLuint );

    // OpenGL 4.0
    alias da_glMinSampleShading = void function( GLclampf );
    alias da_glBlendEquationi = void function( GLuint,GLenum );
    alias da_glBlendEquationSeparatei = void function( GLuint,GLenum,GLenum );
    alias da_glBlendFunci = void function( GLuint,GLenum,GLenum );
    alias da_glBlendFuncSeparatei = void function( GLuint,GLenum,GLenum,GLenum,GLenum );

    // OpenGL 4.5
    alias da_glGetnCompressedTexImage = void function( GLenum,GLint,GLsizei,void* );
    alias da_glGetnTexImage = void function( GLenum,GLint,GLenum,GLenum,GLsizei,void* );
    alias da_glGetnUniformdv = void function( GLuint,GLint,GLsizei,GLdouble* );
}

__gshared {
    da_glCullFace glCullFace;
    da_glFrontFace glFrontFace;
    da_glHint glHint;
    da_glLineWidth glLineWidth;
    da_glPointSize glPointSize;
    da_glPolygonMode glPolygonMode;
    da_glScissor glScissor;
    da_glTexParameterf glTexParameterf;
    da_glTexParameterfv glTexParameterfv;
    da_glTexParameteri glTexParameteri;
    da_glTexParameteriv glTexParameteriv;
    da_glTexImage1D glTexImage1D;
    da_glTexImage2D glTexImage2D;
    da_glDrawBuffer glDrawBuffer;
    da_glClear glClear;
    da_glClearColor glClearColor;
    da_glClearStencil glClearStencil;
    da_glClearDepth glClearDepth;
    da_glStencilMask glStencilMask;
    da_glColorMask glColorMask;
    da_glDepthMask glDepthMask;
    da_glDisable glDisable;
    da_glEnable glEnable;
    da_glFinish glFinish;
    da_glFlush glFlush;
    da_glBlendFunc glBlendFunc;
    da_glLogicOp glLogicOp;
    da_glStencilFunc glStencilFunc;
    da_glStencilOp glStencilOp;
    da_glDepthFunc glDepthFunc;
    da_glPixelStoref glPixelStoref;
    da_glPixelStorei glPixelStorei;
    da_glReadBuffer glReadBuffer;
    da_glReadPixels glReadPixels;
    da_glGetBooleanv glGetBooleanv;
    da_glGetDoublev glGetDoublev;
    da_glGetError glGetError;
    da_glGetFloatv glGetFloatv;
    da_glGetIntegerv glGetIntegerv;
    da_glGetString glGetString;
    da_glGetTexImage glGetTexImage;
    da_glGetTexParameterfv glGetTexParameterfv;
    da_glGetTexParameteriv glGetTexParameteriv;
    da_glGetTexLevelParameterfv glGetTexLevelParameterfv;
    da_glGetTexLevelParameteriv glGetTexLevelParameteriv;
    da_glIsEnabled glIsEnabled;
    da_glDepthRange glDepthRange;
    da_glViewport glViewport;
    da_glDrawArrays glDrawArrays;
    da_glDrawElements glDrawElements;
    da_glGetPointerv glGetPointerv;
    da_glPolygonOffset glPolygonOffset;
    da_glCopyTexImage1D glCopyTexImage1D;
    da_glCopyTexImage2D glCopyTexImage2D;
    da_glCopyTexSubImage1D glCopyTexSubImage1D;
    da_glCopyTexSubImage2D glCopyTexSubImage2D;
    da_glTexSubImage1D glTexSubImage1D;
    da_glTexSubImage2D glTexSubImage2D;
    da_glBindTexture glBindTexture;
    da_glDeleteTextures glDeleteTextures;
    da_glGenTextures glGenTextures;
    da_glIsTexture glIsTexture;
    da_glBlendColor glBlendColor;
    da_glBlendEquation glBlendEquation;
    da_glDrawRangeElements glDrawRangeElements;
    da_glTexImage3D glTexImage3D;
    da_glTexSubImage3D glTexSubImage3D;
    da_glCopyTexSubImage3D glCopyTexSubImage3D;
    da_glActiveTexture glActiveTexture;
    da_glSampleCoverage glSampleCoverage;
    da_glCompressedTexImage3D glCompressedTexImage3D;
    da_glCompressedTexImage2D glCompressedTexImage2D;
    da_glCompressedTexImage1D glCompressedTexImage1D;
    da_glCompressedTexSubImage3D glCompressedTexSubImage3D;
    da_glCompressedTexSubImage2D glCompressedTexSubImage2D;
    da_glCompressedTexSubImage1D glCompressedTexSubImage1D;
    da_glGetCompressedTexImage glGetCompressedTexImage;
    da_glBlendFuncSeparate glBlendFuncSeparate;
    da_glMultiDrawArrays glMultiDrawArrays;
    da_glMultiDrawElements glMultiDrawElements;
    da_glPointParameterf glPointParameterf;
    da_glPointParameterfv glPointParameterfv;
    da_glPointParameteri glPointParameteri;
    da_glPointParameteriv glPointParameteriv;
    da_glGenQueries glGenQueries;
    da_glDeleteQueries glDeleteQueries;
    da_glIsQuery glIsQuery;
    da_glBeginQuery glBeginQuery;
    da_glEndQuery glEndQuery;
    da_glGetQueryiv glGetQueryiv;
    da_glGetQueryObjectiv glGetQueryObjectiv;
    da_glGetQueryObjectuiv glGetQueryObjectuiv;
    da_glBindBuffer glBindBuffer;
    da_glDeleteBuffers glDeleteBuffers;
    da_glGenBuffers glGenBuffers;
    da_glIsBuffer glIsBuffer;
    da_glBufferData glBufferData;
    da_glBufferSubData glBufferSubData;
    da_glGetBufferSubData glGetBufferSubData;
    da_glMapBuffer glMapBuffer;
    da_glUnmapBuffer glUnmapBuffer;
    da_glGetBufferParameteriv glGetBufferParameteriv;
    da_glGetBufferPointerv glGetBufferPointerv;
    da_glBlendEquationSeparate glBlendEquationSeparate;
    da_glDrawBuffers glDrawBuffers;
    da_glStencilOpSeparate glStencilOpSeparate;
    da_glStencilFuncSeparate glStencilFuncSeparate;
    da_glStencilMaskSeparate glStencilMaskSeparate;
    da_glAttachShader glAttachShader;
    da_glBindAttribLocation glBindAttribLocation;
    da_glCompileShader glCompileShader;
    da_glCreateProgram glCreateProgram;
    da_glCreateShader glCreateShader;
    da_glDeleteProgram glDeleteProgram;
    da_glDeleteShader glDeleteShader;
    da_glDetachShader glDetachShader;
    da_glDisableVertexAttribArray glDisableVertexAttribArray;
    da_glEnableVertexAttribArray glEnableVertexAttribArray;
    da_glGetActiveAttrib glGetActiveAttrib;
    da_glGetActiveUniform glGetActiveUniform;
    da_glGetAttachedShaders glGetAttachedShaders;
    da_glGetAttribLocation glGetAttribLocation;
    da_glGetProgramiv glGetProgramiv;
    da_glGetProgramInfoLog glGetProgramInfoLog;
    da_glGetShaderiv glGetShaderiv;
    da_glGetShaderInfoLog glGetShaderInfoLog;
    da_glGetShaderSource glGetShaderSource;
    da_glGetUniformLocation glGetUniformLocation;
    da_glGetUniformfv glGetUniformfv;
    da_glGetUniformiv glGetUniformiv;
    da_glGetVertexAttribdv glGetVertexAttribdv;
    da_glGetVertexAttribfv glGetVertexAttribfv;
    da_glGetVertexAttribiv glGetVertexAttribiv;
    da_glGetVertexAttribPointerv glGetVertexAttribPointerv;
    da_glIsProgram glIsProgram;
    da_glIsShader glIsShader;
    da_glLinkProgram glLinkProgram;
    da_glShaderSource glShaderSource;
    da_glUseProgram glUseProgram;
    da_glUniform1f glUniform1f;
    da_glUniform2f glUniform2f;
    da_glUniform3f glUniform3f;
    da_glUniform4f glUniform4f;
    da_glUniform1i glUniform1i;
    da_glUniform2i glUniform2i;
    da_glUniform3i glUniform3i;
    da_glUniform4i glUniform4i;
    da_glUniform1fv glUniform1fv;
    da_glUniform2fv glUniform2fv;
    da_glUniform3fv glUniform3fv;
    da_glUniform4fv glUniform4fv;
    da_glUniform1iv glUniform1iv;
    da_glUniform2iv glUniform2iv;
    da_glUniform3iv glUniform3iv;
    da_glUniform4iv glUniform4iv;
    da_glUniformMatrix2fv glUniformMatrix2fv;
    da_glUniformMatrix3fv glUniformMatrix3fv;
    da_glUniformMatrix4fv glUniformMatrix4fv;
    da_glValidateProgram glValidateProgram;
    da_glVertexAttrib1d glVertexAttrib1d;
    da_glVertexAttrib1dv glVertexAttrib1dv;
    da_glVertexAttrib1f glVertexAttrib1f;
    da_glVertexAttrib1fv glVertexAttrib1fv;
    da_glVertexAttrib1s glVertexAttrib1s;
    da_glVertexAttrib1sv glVertexAttrib1sv;
    da_glVertexAttrib2d glVertexAttrib2d;
    da_glVertexAttrib2dv glVertexAttrib2dv;
    da_glVertexAttrib2f glVertexAttrib2f;
    da_glVertexAttrib2fv glVertexAttrib2fv;
    da_glVertexAttrib2s glVertexAttrib2s;
    da_glVertexAttrib2sv glVertexAttrib2sv;
    da_glVertexAttrib3d glVertexAttrib3d;
    da_glVertexAttrib3dv glVertexAttrib3dv;
    da_glVertexAttrib3f glVertexAttrib3f;
    da_glVertexAttrib3fv glVertexAttrib3fv;
    da_glVertexAttrib3s glVertexAttrib3s;
    da_glVertexAttrib3sv glVertexAttrib3sv;
    da_glVertexAttrib4Nbv glVertexAttrib4Nbv;
    da_glVertexAttrib4Niv glVertexAttrib4Niv;
    da_glVertexAttrib4Nsv glVertexAttrib4Nsv;
    da_glVertexAttrib4Nub glVertexAttrib4Nub;
    da_glVertexAttrib4Nubv glVertexAttrib4Nubv;
    da_glVertexAttrib4Nuiv glVertexAttrib4Nuiv;
    da_glVertexAttrib4Nusv glVertexAttrib4Nusv;
    da_glVertexAttrib4bv glVertexAttrib4bv;
    da_glVertexAttrib4d glVertexAttrib4d;
    da_glVertexAttrib4dv glVertexAttrib4dv;
    da_glVertexAttrib4f glVertexAttrib4f;
    da_glVertexAttrib4fv glVertexAttrib4fv;
    da_glVertexAttrib4iv glVertexAttrib4iv;
    da_glVertexAttrib4s glVertexAttrib4s;
    da_glVertexAttrib4sv glVertexAttrib4sv;
    da_glVertexAttrib4ubv glVertexAttrib4ubv;
    da_glVertexAttrib4uiv glVertexAttrib4uiv;
    da_glVertexAttrib4usv glVertexAttrib4usv;
    da_glVertexAttribPointer glVertexAttribPointer;
    da_glUniformMatrix2x3fv glUniformMatrix2x3fv;
    da_glUniformMatrix3x2fv glUniformMatrix3x2fv;
    da_glUniformMatrix2x4fv glUniformMatrix2x4fv;
    da_glUniformMatrix4x2fv glUniformMatrix4x2fv;
    da_glUniformMatrix3x4fv glUniformMatrix3x4fv;
    da_glUniformMatrix4x3fv glUniformMatrix4x3fv;
    da_glColorMaski glColorMaski;
    da_glGetBooleani_v glGetBooleani_v;
    da_glGetIntegeri_v glGetIntegeri_v;
    da_glEnablei glEnablei;
    da_glDisablei glDisablei;
    da_glIsEnabledi glIsEnabledi;
    da_glBeginTransformFeedback glBeginTransformFeedback;
    da_glEndTransformFeedback glEndTransformFeedback;
    da_glBindBufferRange glBindBufferRange;
    da_glBindBufferBase glBindBufferBase;
    da_glTransformFeedbackVaryings glTransformFeedbackVaryings;
    da_glGetTransformFeedbackVarying glGetTransformFeedbackVarying;
    da_glClampColor glClampColor;
    da_glBeginConditionalRender glBeginConditionalRender;
    da_glEndConditionalRender glEndConditionalRender;
    da_glVertexAttribIPointer glVertexAttribIPointer;
    da_glGetVertexAttribIiv glGetVertexAttribIiv;
    da_glGetVertexAttribIuiv glGetVertexAttribIuiv;
    da_glVertexAttribI1i glVertexAttribI1i;
    da_glVertexAttribI2i glVertexAttribI2i;
    da_glVertexAttribI3i glVertexAttribI3i;
    da_glVertexAttribI4i glVertexAttribI4i;
    da_glVertexAttribI1ui glVertexAttribI1ui;
    da_glVertexAttribI2ui glVertexAttribI2ui;
    da_glVertexAttribI3ui glVertexAttribI3ui;
    da_glVertexAttribI4ui glVertexAttribI4ui;
    da_glVertexAttribI1iv glVertexAttribI1iv;
    da_glVertexAttribI2iv glVertexAttribI2iv;
    da_glVertexAttribI3iv glVertexAttribI3iv;
    da_glVertexAttribI4iv glVertexAttribI4iv;
    da_glVertexAttribI1uiv glVertexAttribI1uiv;
    da_glVertexAttribI2uiv glVertexAttribI2uiv;
    da_glVertexAttribI3uiv glVertexAttribI3uiv;
    da_glVertexAttribI4uiv glVertexAttribI4uiv;
    da_glVertexAttribI4bv glVertexAttribI4bv;
    da_glVertexAttribI4sv glVertexAttribI4sv;
    da_glVertexAttribI4ubv glVertexAttribI4ubv;
    da_glVertexAttribI4usv glVertexAttribI4usv;
    da_glGetUniformuiv glGetUniformuiv;
    da_glBindFragDataLocation glBindFragDataLocation;
    da_glGetFragDataLocation glGetFragDataLocation;
    da_glUniform1ui glUniform1ui;
    da_glUniform2ui glUniform2ui;
    da_glUniform3ui glUniform3ui;
    da_glUniform4ui glUniform4ui;
    da_glUniform1uiv glUniform1uiv;
    da_glUniform2uiv glUniform2uiv;
    da_glUniform3uiv glUniform3uiv;
    da_glUniform4uiv glUniform4uiv;
    da_glTexParameterIiv glTexParameterIiv;
    da_glTexParameterIuiv glTexParameterIuiv;
    da_glGetTexParameterIiv glGetTexParameterIiv;
    da_glGetTexParameterIuiv glGetTexParameterIuiv;
    da_glClearBufferiv glClearBufferiv;
    da_glClearBufferuiv glClearBufferuiv;
    da_glClearBufferfv glClearBufferfv;
    da_glClearBufferfi glClearBufferfi;
    da_glGetStringi glGetStringi;
    da_glDrawArraysInstanced glDrawArraysInstanced;
    da_glDrawElementsInstanced glDrawElementsInstanced;
    da_glTexBuffer glTexBuffer;
    da_glPrimitiveRestartIndex glPrimitiveRestartIndex;
    da_glGetInteger64i_v glGetInteger64i_v;
    da_glGetBufferParameteri64v glGetBufferParameteri64v;
    da_glFramebufferTexture glFramebufferTexture;
    da_glVertexAttribDivisor glVertexAttribDivisor;
    da_glMinSampleShading glMinSampleShading;
    da_glBlendEquationi glBlendEquationi;
    da_glBlendEquationSeparatei glBlendEquationSeparatei;
    da_glBlendFunci glBlendFunci;
    da_glBlendFuncSeparatei glBlendFuncSeparatei;
    da_glGetnTexImage glGetnTexImage;
    da_glGetnCompressedTexImage glGetnCompressedTexImage;
    da_glGetnUniformdv glGetnUniformdv;
}
